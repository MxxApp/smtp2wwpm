name: Release & Docker

permissions:
  contents: write
  packages: write

on:
  push:
    tags:
      - "v*"

jobs:

  build-release:
    name: Build release binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Ensure go.mod is up-to-date
        run: |
          go mod tidy
      - name: Build binary
        run: |
          mkdir -p build
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 go build -o build/smtp2wwpm main.go
      - name: Tar & Gzip
        run: |
          cd build
          tar czvf smtp2wwpm-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz smtp2wwpm
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: smtp2wwpm-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/smtp2wwpm-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz

  release:
    name: Release to GitHub
    needs: build-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: build
      - name: Prepare Release Assets
        run: |
          mkdir upload
          find build -name "*.tar.gz" -exec cp {} upload/ \;
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: upload/*.tar.gz

  docker:
    name: Docker multi-arch build & push
    needs: build-release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # 可选：如需推送到 Docker Hub，请添加 dockerhub 登录步骤
      - name: Extract owner name
        id: extract_owner
        run: |
          owner="${GITHUB_REPOSITORY%%/*}"
          echo "owner=$(echo $owner | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ steps.extract_owner.outputs.owner }}/smtp2wwpm:latest
            ghcr.io/${{ steps.extract_owner.outputs.owner }}/smtp2wwpm:${{ github.ref_name }}